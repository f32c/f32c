--- ../org/gcc-4.5.3/configure	2011-01-25 16:49:54.000000000 +0100
+++ ./configure	2011-05-01 13:57:12.000000000 +0200
@@ -2936,6 +2936,10 @@ target_libraries="target-libgcc \
 #
 target_tools="target-examples target-groff target-gperf target-rda"
 
+# Disable building of target libraries and / or tools
+target_libraries=""
+target_tools=""
+
 ################################################################################
 
 ## All tools belong in one of the four categories, and are assigned above
--- ../org/gcc-4.5.3/gcc/config/mips/mips.md	2010-04-02 21:54:46.000000000 +0200
+++ ./gcc/config/mips/mips.md	2011-05-02 03:17:37.000000000 +0200
@@ -1444,7 +1444,7 @@
   [(set (match_operand:GPR 0 "register_operand")
 	(mult:GPR (match_operand:GPR 1 "register_operand")
 		  (match_operand:GPR 2 "register_operand")))]
-  ""
+  "!TARGET_SWMUL"
 {
   if (TARGET_LOONGSON_2EF)
     emit_insn (gen_mul<mode>3_mul3_ls2ef (operands[0], operands[1],
@@ -1847,7 +1847,7 @@
   [(set (match_operand:DI 0 "register_operand")
 	(mult:DI (any_extend:DI (match_operand:SI 1 "register_operand"))
 		 (any_extend:DI (match_operand:SI 2 "register_operand"))))]
-  "mips_mulsidi3_gen_fn (<CODE>) != NULL"
+  "!TARGET_SWMUL && mips_mulsidi3_gen_fn (<CODE>) != NULL"
 {
   mulsidi3_gen_fn fn = mips_mulsidi3_gen_fn (<CODE>);
   emit_insn (fn (operands[0], operands[1], operands[2]));
@@ -2007,7 +2007,7 @@
 	  (mult:DI (any_extend:DI (match_operand:SI 1 "register_operand"))
 		   (any_extend:DI (match_operand:SI 2 "register_operand")))
 	  (const_int 32))))]
-  ""
+  "!TARGET_SWMUL"
 {
   if (ISA_HAS_MULHI)
     emit_insn (gen_<su>mulsi3_highpart_mulhi_internal (operands[0],
@@ -2027,7 +2027,7 @@
 		   (any_extend:DI (match_operand:SI 2 "register_operand" "d")))
 	  (const_int 32))))
    (clobber (match_scratch:SI 3 "=l"))]
-  "!ISA_HAS_MULHI"
+  "!TARGET_SWMUL && !ISA_HAS_MULHI"
   { return TARGET_FIX_R4000 ? "mult<u>\t%1,%2\n\tmfhi\t%0" : "#"; }
   "&& reload_completed && !TARGET_FIX_R4000"
   [(const_int 0)]
@@ -2349,7 +2349,9 @@
 		  (match_operand:ANYF 2 "register_operand")))]
   "<divide_condition>"
 {
-  if (const_1_operand (operands[1], <MODE>mode))
+  if (TARGET_SWMUL)
+    FAIL;
+  else if (const_1_operand (operands[1], <MODE>mode))
     if (!(<recip_condition> && flag_unsafe_math_optimizations))
       operands[1] = force_reg (<MODE>mode, operands[1]);
 })
@@ -2411,7 +2413,7 @@
    (set (match_operand:GPR 3 "register_operand" "=d")
 	(mod:GPR (match_dup 1)
 		 (match_dup 2)))]
-  "!TARGET_FIX_VR4120"
+  "!TARGET_SWDIV && !TARGET_FIX_VR4120"
   "#"
   "&& reload_completed"
   [(const_int 0)]
@@ -2443,7 +2445,7 @@
    (set (match_operand:GPR 3 "register_operand" "=d")
 	(umod:GPR (match_dup 1)
 		  (match_dup 2)))]
-  ""
+  "!TARGET_SWDIV"
   "#"
   "reload_completed"
   [(const_int 0)]
@@ -2474,7 +2476,7 @@
 	  [(any_div:GPR (match_operand:GPR 1 "register_operand" "d")
 			(match_operand:GPR 2 "register_operand" "d"))]
 	  UNSPEC_SET_HILO))]
-  ""
+  "!TARGET_SWDIV"
   { return mips_output_division ("<GPR:d>div<u>\t%.,%1,%2", operands); }
   [(set_attr "type" "idiv")
    (set_attr "mode" "<GPR:MODE>")])
--- ../org/gcc-4.5.3/gcc/config/mips/mips.opt	2009-10-29 18:39:52.000000000 +0100
+++ ./gcc/config/mips/mips.opt	2011-05-01 14:05:15.000000000 +0200
@@ -70,6 +70,14 @@ mdouble-float
 Target Report RejectNegative InverseMask(SINGLE_FLOAT, DOUBLE_FLOAT)
 Allow hardware floating-point instructions to cover both 32-bit and 64-bit operations
 
+msoft-mul
+Target Report Mask(SWMUL)
+Do not use integer mul instructions
+
+msoft-div
+Target Report Mask(SWDIV)
+Do not use integer div instructions
+
 mdsp
 Target Report Mask(DSP)
 Use MIPS-DSP instructions
