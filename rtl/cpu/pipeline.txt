Pipeline stages:

IF - instruction fetch
ID - instruction decode
EX - execute
MEM - memory acces
WB - register writeback



MEM stage stall causes:

- write not acknowledged from RAM
- data not ready from RAM
- must shift data received from RAM
- must shift data to be sent to RAM


EX stage stall causes:

- MEM stage stall
- branch in EX, but next instruction not yet in ID


ID stage stall causes:

- EX stage stall
- load-use hazard: operand target of LD in EX stage
	- must insert bubble in EX


Exception FSM
=============

EI .. enable interrupts
EIP .. exception in progress

#0: EI = 1, IF_ID_EIP = 0, ID_EX_EIP = 0, EX_MEM_EIP = 0:
	- exception flows from ID, accepted in EX stage
	- in EX_MEM schedule copying EBASE -> k0 (in WB stage, 2 cycles later)
	- store EPC

#1: EI = 0, IF_ID_EIP = 0, ID_EX_EIP = 0, EX_MEM_EIP = 1:
	- discard all instructions arriving to IF_ID, ID_EX and EX_MEM
	- wait for a non-branch-delay slot in IF_ID
	- issue "jr k0" in IF_ID

#2: EI = 0, IF_ID_EIP = 1, ID_EX_EIP = 0, EX_MEM_EIP = 1:
	- discard all instructions arriving to IF_ID, ID_EX and EX_MEM

#3: EI = 0, IF_ID_EIP = 0, ID_EX_EIP = 1, EX_MEM_EIP = 1:
	- discard all instructions arriving to IF_ID, ID_EX and EX_MEM

#4: EI = 0, IF_ID_EIP = 0, ID_EX_EIP = 0, EX_MEM_EIP = 0:
	- normal operation, exceptions ignored

Exception FSM is synchronized to arrival of new instructions in ID stage.
